diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100755
index 000000000..c7a60be56
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,53 @@
+cmake_minimum_required(VERSION 3.28)
+project(lwjgl)
+
+add_compile_definitions(_GNU_SOURCE)
+add_compile_definitions(LWJGL_LINUX)
+
+include_directories(
+    ${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/core/src/main/c
+    ${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/core/src/generated/c
+    ${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/core/src/main/c/linux
+    ${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/core/src/main/c/linux/liburing
+    ${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/core/src/main/c/linux/liburing/include
+    ${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/core/src/main/c/libffi
+    ${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/core/src/generated/c/linux
+    ${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/opengl/src/main/c
+    ${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/opengl/src/generated/c
+    ${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/opengl/src/main/c/linux
+    ${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/opengl/src/generated/c/linux
+)
+if(ANDROID_ABI STREQUAL "arm64-v8a")
+    include_directories(${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/core/src/main/c/libffi/aarch64)
+elseif(ANDROID_ABI STREQUAL "armeabi-v7a")
+    include_directories(${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/core/src/main/c/libffi/arm)
+elseif(ANDROID_ABI STREQUAL "x86" OR ANDROID_ABI STREQUAL "x86_64")
+    include_directories(${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/core/src/main/c/libffi/x86)
+endif()
+
+file(GLOB URING_SRC
+        ${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/core/src/main/c/linux/liburing/*.c
+)
+add_library(uring STATIC ${URING_SRC})
+
+file(GLOB CORE_SRC
+    ${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/core/src/main/c/*.c
+    ${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/core/src/generated/c/*.c
+    ${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/core/src/main/c/linux/*.c
+    ${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/core/src/generated/c/linux/*.c
+)
+add_library(lwjgl_core SHARED ${CORE_SRC})
+target_link_libraries(lwjgl_core dl uring ${CMAKE_BINARY_DIR}/libffi.a) # libffi should be built and put there by external means
+target_compile_options(lwjgl_core PRIVATE -O3
+        -fno-optimize-sibling-calls # this prevents tailing call optimizations in org.lwjgl.system.linux.DynamicLinkLoader JNI which break caller addr resolution in android linker
+)
+set_target_properties(lwjgl_core PROPERTIES OUTPUT_NAME lwjgl)
+
+file(GLOB OPENGL_SRC
+    ${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/opengl/src/main/c/*.c
+    ${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/opengl/src/generated/c/*.c
+    ${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/opengl/src/main/c/linux/*.c
+    ${CMAKE_CURRENT_SOURCE_DIR}/modules/lwjgl/opengl/src/generated/c/linux/*.c
+)
+list(FILTER OPENGL_SRC EXCLUDE REGEX ".*org_lwjgl_opengl_WGL\.c$")
+add_library(lwjgl_opengl SHARED ${OPENGL_SRC})
diff --git a/modules/lwjgl/core/src/main/c/linux/liburing/include/liburing/compat.h b/modules/lwjgl/core/src/main/c/linux/liburing/include/liburing/compat.h
index 44fe4dc9b..7992e1be3 100644
--- a/modules/lwjgl/core/src/main/c/linux/liburing/include/liburing/compat.h
+++ b/modules/lwjgl/core/src/main/c/linux/liburing/include/liburing/compat.h
@@ -7,22 +7,23 @@
 #include <stdint.h>
 #include <sys/stat.h>
 #include <linux/ioctl.h>
+#include <linux/time_types.h>
 
 typedef int __kernel_rwf_t;
 
-struct __kernel_timespec {
-	int64_t		tv_sec;
-	long long	tv_nsec;
-};
+//struct __kernel_timespec {
+//	int64_t		tv_sec;
+//	long long	tv_nsec;
+//};
 
 /* <linux/time_types.h> is not available, so it can't be included */
 #define UAPI_LINUX_IO_URING_H_SKIP_LINUX_TIME_TYPES_H 1
 
-struct open_how {
-	uint64_t	flags;
-	uint64_t	mode;
-	uint64_t	resolve;
-};
+//struct open_how {
+//	uint64_t	flags;
+//	uint64_t	mode;
+//	uint64_t	resolve;
+//};
 
 #ifndef BLOCK_URING_CMD_DISCARD
 #define BLOCK_URING_CMD_DISCARD                        _IO(0x12, 0)
